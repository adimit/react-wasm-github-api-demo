[package]
name = "backend"
version = "0.1.0"
authors = ["Aleksandar Dimitrov <git@aleks.bg>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc", "console_log"]

[dependencies]
wasm-bindgen = { version = "0.2.70", features = ["serde-serialize"] }
graphql_client = {version = "0.9", features = ["web"] }
js-sys = "0.3"
wasm-bindgen-futures = "0.4.20"
serde = { version = "1.0.80", features = ["derive"] }
serde_derive = "1.0"
cfg-if = "0.1"
log = "0.4"
console_log = { version = "0.2", optional = true, features = ["color"] }
futures-util = "0.3.8"
serde_json = "1.0"
anyhow = "1.0.38"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window'
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
